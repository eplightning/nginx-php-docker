apiVersion: v1
data:
  example.conf: |
    server {
        listen 8080 default_server;
        listen [::]:8080 default_server ipv6only=on;

        server_name _;
        root /app/src;
        index index.php index.html index.htm;

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
            try_files $uri /index.php =404;

            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

            fastcgi_pass php-fpm;
        }

        location ~ /\.ht {
            deny all;
        }
    }
kind: ConfigMap
metadata:
  name: nginx-config-562h7226c4
---
apiVersion: v1
data:
  phpinfo.php: |
    <?php
    phpinfo();
kind: ConfigMap
metadata:
  name: phpinfo-f4dk274577
---
apiVersion: v1
kind: Service
metadata:
  name: example-php-app
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app: example-php-app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-php-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example-php-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: example-php-app
    spec:
      containers:
      - image: bslawianowski/nginx-php:latest
        livenessProbe:
          httpGet:
            path: /ping
            port: healthcheck
          initialDelaySeconds: 30
        name: app
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: healthcheck
        readinessProbe:
          httpGet:
            path: /ping
            port: healthcheck
          initialDelaySeconds: 10
        volumeMounts:
        - mountPath: /app/src
          name: data
        - mountPath: /etc/nginx/nginx.conf.d
          name: nginx-config
          readOnly: true
      enableServiceLinks: false
      securityContext:
        fsGroup: 0
        runAsUser: 1000
      terminationGracePeriodSeconds: 60
      volumes:
      - configMap:
          name: phpinfo-f4dk274577
        name: data
      - configMap:
          name: nginx-config-562h7226c4
        name: nginx-config
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: example-php-app
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: example-php-app
          servicePort: http
